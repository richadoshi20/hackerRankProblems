/*
Hourglass problem
Input:
1 1 1 0 0 0
0 1 0 0 0 0
1 1 1 0 0 0
0 0 2 4 4 0
0 0 0 2 0 0
0 0 1 2 4 0

Output:
19
*/
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    
    static int hourglassSum(int[][] arr) {

        int maxSum = Integer.MIN_VALUE;
        
        // Calculate 1st Hourglass Sum
        int[][] hourGlassCordinates = new int[][]{
            {0,0},
            {0,1},
            {0,2},
            {1,1},
            {2,0},
            {2,1},
            {2,2}
        };
        for(int i = 0; i < 4; i++) {
            for(int j = 0; j < 4; j++) {
                int sum = 0;
                for(int[] hg: hourGlassCordinates) {
                    sum += arr[i + hg[0]][j + hg[1]];
                maxSum = Math.max(sum, maxSum);
            }
        }
        return maxSum;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int[][] arr = new int[6][6];

        for (int i = 0; i < 6; i++) {
            String[] arrRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowItems[j]);
                arr[i][j] = arrItem;
            }
        }

        int result = hourglassSum(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
