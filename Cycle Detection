 static boolean hasCycle(SinglyLinkedListNode head) {
        //Brute force approach
        // HashSet<SinglyLinkedListNode> set = new HashSet<>();
        // while   (head != null)  {
        //     if  (set.contains(head.next))   {
        //         return true;
        //     }else   {
        //         set.add(head.next);
        //     }
        //     head = head.next;
        // }
        // return false;
        //Floyd's Tortoise and Hare cycle-finding algorithm.
        SinglyLinkedListNode fast = head;
        while   (fast != null && fast.next != null) {
            fast = fast.next.next;
            head = head.next;
            if  (fast == head)
                return true;
        }
        return false;
    }
